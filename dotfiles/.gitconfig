[user]
    name = Sadie Louise Bartholomew
    email = sadie.bartholomew@ncas.ac.uk

[core]
    editor = emacs
    pager = delta

    # Can't use env vars like $HOME in a gitconfig, sad times...
    excludesfile = /home/sadie/.gitignore_global

    # Turn on all whitespace detection and fixing. Note that 'blank-at-eol',
    # 'blank-at-eof' and 'space-before-tab' are all enabled already by default
    # and 'indent-with-non-tab' is disabled by default (as wanted).
    whitespace = tab-in-indent, cr-at-eol, fix

[transfer]
    fsckObjects = true

[web]
    browser = google-chrome

[delta]
    line-numbers = true
    syntax-theme = 1337
    plus-style = '"#E5E5FF" "#004d39"'
    minus-style = '"#E5E5FF" "#66001a"'
    plus-emph-style = '"#E5E5FF" bold "#009970"'
    minus-emph-style = '"#E5E5FF" bold "#cc0033"'
    line-numbers-minus-style = "#8FBCB5"
    line-numbers-zero-style = "#8FBCB5"
    line-numbers-plus-style = "#8FBCB5"
    line-numbers-left-format = "{nm:>4}:"
    line-numbers-right-format = "{np:>4}â”‚"
    whitespace-error-style = '"#3980C6" reverse'

[interactive]
    diffFilter = delta --color-only

[diff]
    tool = ediff
    guitool = ediff
    prompt = false

[difftool]
    prompt = false

[difftool "ediff"]
    cmd = emacs --eval \"(ediff-files \\\"$LOCAL\\\" \\\"$REMOTE\\\")\"

[merge]
    tool = emerge
    prompt = false

[color]
    ui = auto

[color "status"]
    added = "#009970"
    changed = "#FFDF80"
    untracked = "#3980C6"

[color "branch"]
    current = "#009970"
    local = "#FFDF80"
    remote = "#3980C6"

# colour and formatting for log is dealt with by pretty=format in aliases here:
[alias]
  # Note there are also several git top-level aliases and custom functions
  # defined in .bash_aliases that can be used but are not printed by 'aliases'.

  # Remind me of my own alises!
  aliases = "!git config -l | grep alias | cut -c 7-"

  clog = log --pretty=format:'%C(cyan)%h%Creset| %s %Cred(%ad) %C(blue)%an%Creset %C(auto)%d%Creset ' --abbrev-commit --date=short
  glog = log --graph --pretty=format:'%C(cyan)%h%Creset %s %Cred(%ad) %C(blue)%an%Creset %C(auto)%d%Creset ' --abbrev-commit --date=short

  # Requires escape to shell (via '!') to grab current branch
  br = "!git rev-parse --abbrev-ref HEAD"
  pushup = "!git push upstream $(git br):master"
  pusho = push origin HEAD

  cm = commit -m

  rebasic = rebase -i origin/master

  # Every appended 'x' increases the number of context lines for each match
  grepx = grep -A 2 -B 2
  grepxx = grep -A 5 -B 5
  grepxxx = grep -A 10 -B 10
  grepxxxx = grep -A 50 -B 50
