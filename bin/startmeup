#!/bin/bash

# These scripts follow the Google styleguide for shell scripts, see:
# https://google.github.io/styleguide/shellguide.html

USERNAME=sadie  # SLB system $USER
BROWSER_CHOICE_COMMAND=google-chrome  # alternatively 'firefox', etc.
# Directory to hold (core) files under org mode
ORG_DIR=~/org/

# URL prefixes
SECURE_HTP_PRE="https://"
GITHUB_ROOT="${SECURE_HTP_PRE}github.com/"

# URLs to open, one array for each window to open
admin_urls_array=(
    "${SECURE_HTP_PRE}mail.google.com/mail/u/0/#inbox"
    "${SECURE_HTP_PRE}calendar.google.com/calendar"
    "${GITHUB_ROOT}"  # GH dashboard at root URL
    "${GITHUB_ROOT}/notifications"
    "${SECURE_HTP_PRE}www.githubstatus.com"
)
dev_urls_array=(
    "${GITHUB_ROOT}/NCAS-CMS"
    "${GITHUB_ROOT}/ES-DOC"
    "${GITHUB_ROOT}/ES-DOC-INSTITUTIONAL"
    "${GITHUB_ROOT}/cf-convention"
)

# ---------------- DEFINE FUNCTIONS FOR STARTUP TASKS -------------- #

# Adjust screen brightness and temperature in the background
set_screen_visibility() {
    # -l sets lat:lat position of Reading and -b and -t set brightness and temp
    # of the screen at day:night in that location respectively.
    redshift -l 51.45:0.98 -b 1.0:0.7 -t 6000:4000 &
}

open_new_terminal() {
    # the 'exec' bash at the end is required to keep the terminal alive
    gnome-terminal --tab --tab --tab \
        -- /bin/bash -c 'resize -s 75 80; clear; exec bash'
}

# Open admin apps e.g. Slack, email clients
open_admin_apps() {
    # Slack set to open on startup outside of this script
    :  # do nothing for now
}

# Designed to accept array of URLs to open in new window as a parameter
open_browser_window() {
    # TODO: add browser tab dividers to help organise tabs visually
    "${BROWSER_CHOICE_COMMAND}" --new-window "${@}" &
}

# Email, GH notifications, dashboard and site status
open_admin_browser_window() {
    open_browser_window "${admin_urls_array[@]}"
}

# Relevant pages for GitHub organisations and projects working on
open_dev_browser_window() {
    open_browser_window "${dev_urls_array[@]}"
}

# Open emacs with key organisation and helper files pre-loaded
open_emacs() {
    emacs "${ORG_DIR}/commands.txt" "${ORG_DIR}/todo-work.org" &
}


# --------- EXECUTE FUNCTIONS UPON STANDARD STARTUP -------------- #

nonwork=false
while getopts "n" option; do
    # Non-workday dev. env. requested, so run alternative function call set
    nonwork=true
done

set_screen_visibility

# Start apps specific to a workday or non-work day/eve
if [ ${nonwork} == "true" ] && [ $(whoami) == ${USERNAME} ]
then
    open_new_terminal
else
    # ADMIN ITEMS
    open_admin_apps
    open_admin_browser_window

    # Sleep for a little bit so have time to move into correct workspace
    sleep 5

    # DEV ITEMS
    open_new_terminal
    open_emacs
    open_dev_browser_window
fi

# Clear the terminals from STDOUT output from the previous commands
cd
clear
